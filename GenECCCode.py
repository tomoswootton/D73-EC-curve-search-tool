# This file was *autogenerated* from the file GenECCCode.sage
from sage.all_cmdline import *   # import sage library

_sage_const_3 = Integer(3); _sage_const_0 = Integer(0); _sage_const_100 = Integer(100); _sage_const_11 = Integer(11); _sage_const_17 = Integer(17); _sage_const_152 = Integer(152); _sage_const_179 = Integer(179); _sage_const_37 = Integer(37); _sage_const_25 = Integer(25)
import subprocess;

def genECCCodeScalarMult(curve,u,v,w,numEntries):
    a,b,p = curve
    E = EllipticCurve(FiniteField(p),[a,b])
    o = open('ECCcode.txt','w')
    for i in range(_sage_const_0 ,numEntries):
        G = E.random_element()
        o.write(str(G[_sage_const_0 ])+","+str((u*G)[_sage_const_0 ])+","+str((v*G)[_sage_const_0 ])+","+str((w*G)[_sage_const_0 ])+"\n")

def genECCCodeIsogency(curve,point,u,v,numEntries):
    a,b,p = curve
    E = EllipticCurve(GF(p),[a,b])
    phi = E.isogeny(E(point))

    o = open('ECCcode.txt','w')
    for i in range(_sage_const_0 ,numEntries):
        G = E.random_element()
        o.write(str(G[_sage_const_0 ])+","+str((u*G)[_sage_const_0 ])+","+str((phi(G))[_sage_const_0 ])+","+str((v*phi(G))[_sage_const_0 ])+"\n")


# generate ECCcode file
# genECCCodeScalarMult([0,7,71389],27181,26687,0,100)
#works
# genECCCodeScalarMult(0,7,71389,27181,26687,100)

genECCCodeIsogency([_sage_const_3 ,_sage_const_11 ,_sage_const_179 ],[_sage_const_152 ,_sage_const_37 ],_sage_const_17 ,_sage_const_25 ,_sage_const_100 )
